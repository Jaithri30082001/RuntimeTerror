TIME COMPLEXITY - O(N) and SPACE COMPLEXITY - O(N)

class Solution {
public:
    bool isPalindrome(string s) {
        
        s.erase(remove(s.begin(), s.end(), ' '), s.end());

        string temp = "";

        for (auto i: s) {
            if (isalpha(i)) {
                if (isupper(i)) {
                    temp += tolower(i);
                }
                else {
                    temp += i;
                } 
            }
            else if (isdigit(i)) {
                temp += i;
            }   
        }
        cout << temp << endl;
        if (temp == "")  return true;
        int i = 0;
        int j = temp.size() - 1;
        while (i <= j) {
            if (temp[i] != temp[j]) return false;    
            i ++;
            j --;                                             
        }
        return true;                 
    }
};
